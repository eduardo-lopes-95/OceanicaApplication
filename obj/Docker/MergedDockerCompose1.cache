name: dockercompose5913192392050431473
services:
  client:
    build:
      context: C:\Users\07-05-007\Documents\Project\OceanicaApplicationG\OceanicaApplication\client
      dockerfile: Dockerfile
    image: client
    networks:
      default: null
    ports:
    - mode: ingress
      target: 3000
      published: "5001"
      protocol: tcp
  database:
    environment:
      MYSQL_DATABASE: OceanicaDB
      MYSQL_PASSWORD: Oceanica@123
      MYSQL_ROOT_PASSWORD: Root0++
      MYSQL_USER: Oceanica@Admin
    image: mysql:8.0.22
    networks:
      default: null
    ports:
    - mode: ingress
      target: 3306
      published: "3307"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: datafiles
      target: /var/lib/mysql
      volume: {}
  oceanica.api:
    build:
      context: C:\Users\07-05-007\Documents\Project\OceanicaApplicationG\OceanicaApplication
      dockerfile: Oceanica.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Oceanica.API
      target: base
    container_name: Oceanica.API
    depends_on:
      database:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /root/.nuget/fallbackpackages
    image: oceanicaapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  ""'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "5000"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\07-05-007\Documents\Project\OceanicaApplicationG\OceanicaApplication\Oceanica.API
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\07-05-007\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\07-05-007\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\07-05-007\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\dotnet\sdk\NuGetFallbackFolder
      target: /root/.nuget/fallbackpackages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\07-05-007\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\07-05-007\Documents\Project\OceanicaApplicationG\OceanicaApplication
      target: /src
      bind:
        create_host_path: true
  proxy:
    image: nginx:mainline
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "80"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\07-05-007\Documents\Project\OceanicaApplicationG\OceanicaApplication\nginx.conf
      target: /etc/ngnix/ngnix.conf
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose5913192392050431473_default
volumes:
  datafiles:
    name: dockercompose5913192392050431473_datafiles